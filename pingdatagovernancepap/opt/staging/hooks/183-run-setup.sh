#!/usr/bin/env sh
#
# Ping Identity DevOps - Docker Build Hooks
#
${VERBOSE} && set -x

# shellcheck source=../../../../pingcommon/opt/staging/hooks/pingcommon.lib.sh
. "${HOOKS_DIR}/pingcommon.lib.sh"

# shellcheck source=../../../../pingdatacommon/opt/staging/hooks/pingdata.lib.sh
test -f "${HOOKS_DIR}/pingdata.lib.sh" && . "${HOOKS_DIR}/pingdata.lib.sh"

# shellcheck source=pingdatagovernancepap.lib.sh
test -f "${HOOKS_DIR}/pingdatagovernancepap.lib.sh" && . "${HOOKS_DIR}/pingdatagovernancepap.lib.sh"

# Move license to current location
# cp "${LICENSE_DIR}/${LICENSE_FILE_NAME}" .

_build_info="${SERVER_ROOT_DIR}/build-info.txt"

# Checks if the product version is 8.1.x.x-GA
is_eq_81ga() {
  test -f "${_build_info}" \
    && awk \
'BEGIN {maj=0;min=0;ga=0}
$1=="Major" && $3=="8" {maj=1}
$1=="Minor" && $3=="1" {min=1}
$2=="Qualifier:" && $3=="-GA" {ga=1}
END {if (maj && min && ga) {exit 0} else {exit 1}}' \
    "${_build_info}"
}

# shellcheck disable=SC2046
if test -f "${SERVER_ROOT_DIR}"/bin/start-server-pre-82 ;
then

  check_external_url

  # Release 8.2.0.x added the ability to omit sensitive values from the
  # configuration generated by the setup tool.
  if is_ge_82 ;
  then
    if use_oidc_mode ;
    then
      echo_green "Setting up PAP in OpenID Connect mode..."
      echo
      echo "Using OIDC configuration endpoint: ${PING_OIDC_CONFIGURATION_ENDPOINT}"
      echo "This will override the --oidcBaseUrl value passed to setup."
      echo

      check_external_url_oidc

      "${SERVER_ROOT_DIR}"/bin/setup oidc \
        --licenseKeyFile "${LICENSE_DIR}/${LICENSE_FILE_NAME}" \
        --port ${HTTPS_PORT} \
        --hostname "${REST_API_HOSTNAME}" \
        --generateSelfSignedCertificate \
        --decisionPointSharedSecret "${DECISION_POINT_SHARED_SECRET}" \
        --oidcBaseUrl "https://example.com" \
        --clientId "${PING_CLIENT_ID}" \
        --excludeSensitiveValues \
        --ignoreWarnings \
        ${ADDITIONAL_SETUP_ARGS} \
        2>&1
    else
      echo_green "Setting up PAP in demo mode..."
      echo
      echo_yellow "WARNING: Demo mode uses insecure form-based authentication and "
      echo_yellow "should not be used in a production environment. If this is not "
      echo_yellow "what you want, redeploy the PAP using OpenID Connect mode."
      echo
      "${SERVER_ROOT_DIR}"/bin/setup demo \
        --licenseKeyFile "${LICENSE_DIR}/${LICENSE_FILE_NAME}" \
        --port ${HTTPS_PORT} \
        --hostname "${REST_API_HOSTNAME}" \
        --generateSelfSignedCertificate \
        --decisionPointSharedSecret "${DECISION_POINT_SHARED_SECRET}" \
        --excludeSensitiveValues \
        --ignoreWarnings \
        ${ADDITIONAL_SETUP_ARGS} \
        2>&1
    fi

  # Release 8.1.0.x added the ability to specify the DB admin credentials, but
  # but not through environment variables, so a workaround was needed
  # to provide Docker users that capability
  elif is_eq_81ga ;
  then
    "${SERVER_ROOT_DIR}"/bin/setup demo \
        --licenseKeyFile "${LICENSE_DIR}/${LICENSE_FILE_NAME}" \
        --dbAdminUsername "${PING_DB_ADMIN_USERNAME:-sa}" \
        --dbAdminPassword "${PING_DB_ADMIN_PASSWORD:-Symphonic2014!}" \
        --port ${HTTPS_PORT} \
        --hostname "${REST_API_HOSTNAME}" \
        --generateSelfSignedCertificate \
        --decisionPointSharedSecret "${DECISION_POINT_SHARED_SECRET}" \
        --ignoreWarnings \
        ${ADDITIONAL_SETUP_ARGS} \
        2>&1
  else
    "${SERVER_ROOT_DIR}"/bin/setup demo \
        --licenseKeyFile "${LICENSE_DIR}/${LICENSE_FILE_NAME}" \
        --port ${HTTPS_PORT} \
        --hostname "${REST_API_HOSTNAME}" \
        --generateSelfSignedCertificate \
        --decisionPointSharedSecret "${DECISION_POINT_SHARED_SECRET}" \
        --ignoreWarnings \
        ${ADDITIONAL_SETUP_ARGS} \
        2>&1
  fi

  # shellcheck disable=SC2046
  if is_ge_82 ;
  then
    rm "${SERVER_ROOT_DIR}"/bin/start-server-pre-82
  else
    mv "${SERVER_ROOT_DIR}"/bin/start-server-pre-82 \
      "${SERVER_ROOT_DIR}"/bin/start-server
  fi
fi

